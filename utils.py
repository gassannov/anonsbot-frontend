"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —á–∞—Ç-–±–æ—Ç–∞
"""

__all__ = [
    "chatting",
    "connect",
    "auth",
    "invoke"
]

import streamlit as st
import requests
import websocket


def chatting() -> None:
    """
    –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ Streamlit.

    :return: None
    """
    for message in st.session_state.messages:
        entity = st.chat_message(message["role"])
        entity.write(message["content"])


def connect(attempts: int = 1) -> None:
    """
    –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API —á–µ—Ä–µ–∑ WebSocket.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ WebSocket —Å —Å–µ—Ä–≤–µ—Ä–æ–º API.

    :param attempts: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1).
    :type attempts: int
    :return: None
    """
    api_key = st.session_state.get("api_key", None)
    if api_key is None:
        st.info("API-–∫–ª—é—á –Ω–µ –±—ã–ª –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω.")
        st.stop()

    ws = websocket.WebSocket()
    with st.spinner(text="–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API..."):
        for _ in range(attempts):
            try:
                ws.connect(
                    url="ws://p2.msk-1.hpc-park.ru:36509/ws",
                    header={"api_key": api_key}
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞: {e}")
                st.error("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            else:
                st.session_state["ws"] = ws
                return st.success("–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API")


def auth() -> None:
    """
    –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–æ–¥ –µ–≥–æ API-–∫–ª—é—á–∞ –∏ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API.

    :return: None
    """
    st.title("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
    st.caption("üöÄ –í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —á–∞—Ç")
    if api_key := st.text_input(
            label="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API-–∫–ª—é—á üîë",
            type="password",
            value=None
    ):
        st.session_state["api_key"] = api_key
        connect()


def invoke(prompt: str) -> None:
    """
    –í—ã–∑–æ–≤ –º–æ–¥–µ–ª–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –∑–∞–ø—Ä–æ—Å–æ–º.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å –º–æ–¥–µ–ª–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ WebSocket –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ—Ç–≤–µ—Ç.

    :param prompt: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å.
    :type prompt: str
    :return: None
    """
    st.chat_message("user").write(prompt)
    st.session_state.messages.append({"role": "user", "content": prompt})
    ws = st.session_state["ws"]
    try:
        ws.send(prompt)
        with st.spinner("–î—É–º–∞–µ–º..."):
            response = ws.recv()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        st.warning("–ü–æ—Ç–µ—Ä—è–Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º —Ö–æ—Å—Ç–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è...")
        st.session_state.messages.pop()
        connect()
    else:
        st.chat_message("ai").write(response)
        st.session_state.messages.append({"role": "ai", "content": response})
# ```

# –ï—Å–ª–∏ –µ—Å—Ç—å —á—Ç–æ-—Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–∞–π—Ç–µ –º–Ω–µ –∑–Ω–∞—Ç—å.
